/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codificacionhuffman;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.math.BigDecimal;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    
    public Ventana() {
        initComponents();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setTitle("Compresion De Datos");
        Imagen img1 = new Imagen("/Imagenes/fondo1.jfif", 670, 810);
        this.Panel.add(img1);
        this.Panel.repaint();
         add(Panel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area_texto = new javax.swing.JTextArea();
        boton_comprimir = new javax.swing.JButton();
        boton_descomprimir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        area_texto2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        area_texto.setColumns(20);
        area_texto.setRows(5);
        jScrollPane1.setViewportView(area_texto);

        boton_comprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/codificacionhuffman/comprimir1.png"))); // NOI18N
        boton_comprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_comprimirActionPerformed(evt);
            }
        });

        boton_descomprimir.setBackground(new java.awt.Color(255, 255, 255));
        boton_descomprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/codificacionhuffman/descomprimir1.png"))); // NOI18N
        boton_descomprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_descomprimirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Descomprimir");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Comprimir");

        area_texto2.setColumns(20);
        area_texto2.setRows(5);
        jScrollPane2.setViewportView(area_texto2);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Area de compresion");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Area de Descompresion");

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(boton_comprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(boton_descomprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(23, 23, 23)))
                .addGap(115, 115, 115))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(27, 27, 27))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(233, 233, 233)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(223, 223, 223))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(boton_comprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boton_descomprimir))
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_descomprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_descomprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton_descomprimirActionPerformed
     
    private void boton_comprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_comprimirActionPerformed
        Huffman compresion = new Huffman();
        String cadena_aux = "",cadena_binaria;
        int log_cadena, log_cadenaAscii, diferencia,porcentaje;
        File archivo;
        FileReader fr;
        BufferedReader br;
        long inicio = System.currentTimeMillis();
        String direccion = JOptionPane.showInputDialog(rootPane,"Ingrese la direccion del archivo: ");
        try {
            archivo = new File(direccion);
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            String linea;
            while((linea=br.readLine())!=null){
                cadena_aux+=linea;
            }
            JOptionPane.showMessageDialog(rootPane,"El archivo se pudo leer con exito");
            area_texto.append("Contenido de TXT: "+cadena_aux);
            JOptionPane.showMessageDialog(rootPane,"Ver lista de caracteres");
            area_texto.append("\n\n***LISTA DE CARACTERES CON FRECUENCIA***");
            area_texto.append("\n");
            compresion.CrearListaFrecuencias(cadena_aux);
            area_texto.append(compresion.getLista().Mostrar());
            JOptionPane.showMessageDialog(rootPane,"Ver lista de caracteres con clave binaria");
            
            compresion.CrearArbol();
            compresion.ClavesParaLetras();
            area_texto.append("\n");
            area_texto.append("\n***LISTA DE CARACTERES CON FRECUENCIA Y CLAVE BINARIA***\n");
            
            area_texto.append(compresion.getLista().Mostrar());
            JOptionPane.showMessageDialog(rootPane,"Ver cadena binaria");
            compresion.ClaveBinario();
            cadena_binaria = compresion.getCadena_binaria();
            area_texto.append("\n\nCadena binaria: "+cadena_binaria);
            compresion.BinarioAascii(cadena_binaria);
            
            JOptionPane.showMessageDialog(rootPane,"Ver cadena Ascii y tabla");
            area_texto.append("\n\nCadena Ascii: "+compresion.getCadenaAscii()+"\n");
            area_texto.append("Tabla: "+compresion.getCadena_tabla());
            try {
            String direccion_tabla = JOptionPane.showInputDialog("Ingrese la direccion donde guardara la tabla");
            compresion.CrearArchivoTabla(direccion);
            
            String direccion_ascii = JOptionPane.showInputDialog("Ingrese direccion donde guardara la cadena Ascii");
            compresion.CrearArchivoCadebaAscii(direccion_ascii);
            JOptionPane.showMessageDialog(rootPane,"Los archivos se guardaron correctamente");
            } catch (Exception e) {
                 JOptionPane.showMessageDialog(rootPane,"Error al guardar los archivos","Error",JOptionPane.ERROR_MESSAGE);
            }
            area_texto.append("\n\n Bytes de la cadena original: "+compresion.getCadena().length()+"\n");
            area_texto.append("Bytes de la cadena Ascii: "+compresion.getCadenaAscii().length());
            log_cadena = compresion.getCadena().length();
            log_cadenaAscii = compresion.getCadenaAscii().length();
            diferencia = log_cadena - log_cadenaAscii;
            porcentaje = (diferencia*100)/log_cadena;
            area_texto.append("\nPorcentaje de compresion: "+porcentaje+"%");
            long fin =  System.currentTimeMillis();
                BigDecimal inicio1 = new BigDecimal(inicio);
                BigDecimal fin1 = new BigDecimal(fin);
                BigDecimal mil = new BigDecimal(1000);
                fin1 = fin1.subtract(inicio1);
                fin1 = fin1.divide(mil);
                area_texto.append("\nTiempo de compresion: "+fin1+" (s)");
                
           
        } catch (Exception e) {
            e.printStackTrace();
           JOptionPane.showMessageDialog(rootPane,"Hubo un problema","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_boton_comprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    private javax.swing.JTextArea area_texto;
    private javax.swing.JTextArea area_texto2;
    private javax.swing.JButton boton_comprimir;
    private javax.swing.JButton boton_descomprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
